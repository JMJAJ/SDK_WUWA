#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InputComponent_Nanzhu

#include "Basic.hpp"

#include "SInputCommand_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_InputComponent_Nanzhu.BP_InputComponent_Nanzhu_C.;û	
// 0x0330 (0x0330 - 0x0000)
struct BP_InputComponent_Nanzhu_C_____ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0038(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3605[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3606[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0060(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3607[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3608[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x009C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x00B0(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x00D0(0x0020)()
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3609[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x00F4(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360A[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_1;                                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x0110(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x0124(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360B[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x013C(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0154(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_5;         // 0x0160(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360C[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4; // 0x0178(0x0020)()
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_6;         // 0x0198(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360D[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360E[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_7;         // 0x01CC(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360F[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_8;         // 0x01E4(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3610[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_9;         // 0x020C(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3611[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3612[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2;  // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3613[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5; // 0x0268(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3614[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3; // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3; // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3615[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3;  // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3616[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_self_CastInput; // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3617[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x02E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_10;        // 0x02FC(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3618[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4;  // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_Nanzhu_C_____) == 0x000008, "Wrong alignment on BP_InputComponent_Nanzhu_C_____");
static_assert(sizeof(BP_InputComponent_Nanzhu_C_____) == 0x000330, "Wrong size on BP_InputComponent_Nanzhu_C_____");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, Time) == 0x000000, "Member 'BP_InputComponent_Nanzhu_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, ReturnValue) == 0x000004, "Member 'BP_InputComponent_Nanzhu_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc______ReturnValue) == 0x000038, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, ___int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_InputComponent_Nanzhu_C_____::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000050, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, ___int_Variable) == 0x000058, "Member 'BP_InputComponent_Nanzhu_C_____::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000060, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000080, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000090, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000099, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue) == 0x00009C, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x0000B0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x0000D0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, ___bool_True_if_break_was_hit_Variable) == 0x0000F0, "Member 'BP_InputComponent_Nanzhu_C_____::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x0000F1, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x0000F4, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BooleanAND_ReturnValue) == 0x000108, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000109, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, ___int_Variable_1) == 0x00010C, "Member 'BP_InputComponent_Nanzhu_C_____::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x000110, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x000124, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x000138, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x00013C, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, ___int_Array_Index_Variable) == 0x000150, "Member 'BP_InputComponent_Nanzhu_C_____::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_Array_Get_Item) == 0x000154, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_5) == 0x000160, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4) == 0x000178, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_6) == 0x000198, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001AC, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001AD, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x0001AE, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x0001AF, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BooleanOR_ReturnValue) == 0x0001B0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0001B8, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001C8, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_7) == 0x0001CC, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x0001E0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_8) == 0x0001E4, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0001F8, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000208, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_9) == 0x00020C, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000220, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000230, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000238, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000248, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x000250, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000260, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5) == 0x000268, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x000288, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x000298, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3) == 0x0002A0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3) == 0x0002B0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x0002B8, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x0002C8, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAllMatchingGameplayTags_self_CastInput) == 0x0002D0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAllMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x0002E0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, K2Node_MakeArray_Array) == 0x0002E8, "Member 'BP_InputComponent_Nanzhu_C_____::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_Array_Get_Item_1) == 0x0002F8, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_10) == 0x0002FC, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000310, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000318, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000328, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");

// Function BP_InputComponent_Nanzhu.BP_InputComponent_Nanzhu_C.;û	
// 0x00A8 (0x00A8 - 0x0000)
struct BP_InputComponent_Nanzhu_C_____ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0040(0x0020)()
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3619[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x007C(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_Nanzhu_C_____) == 0x000008, "Wrong alignment on BP_InputComponent_Nanzhu_C_____");
static_assert(sizeof(BP_InputComponent_Nanzhu_C_____) == 0x0000A8, "Wrong size on BP_InputComponent_Nanzhu_C_____");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, Time) == 0x000000, "Member 'BP_InputComponent_Nanzhu_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, ReturnValue) == 0x000004, "Member 'BP_InputComponent_Nanzhu_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc______ReturnValue) == 0x000018, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue) == 0x00002C, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000040, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000060, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000062, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000063, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BooleanAND_ReturnValue) == 0x000064, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000065, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000068, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000078, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000079, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00007A, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x00007B, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x00007C, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000090, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000A0, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_InputComponent_Nanzhu.BP_InputComponent_Nanzhu_C.ý1	
// 0x00E0 (0x00E0 - 0x0000)
struct BP_InputComponent_Nanzhu_C___1__ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0040(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361A[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x0084(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x00A0(0x0020)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361C[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_Nanzhu_C___1__) == 0x000008, "Wrong alignment on BP_InputComponent_Nanzhu_C___1__");
static_assert(sizeof(BP_InputComponent_Nanzhu_C___1__) == 0x0000E0, "Wrong size on BP_InputComponent_Nanzhu_C___1__");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, Time) == 0x000000, "Member 'BP_InputComponent_Nanzhu_C___1__::Time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, ReturnValue) == 0x000004, "Member 'BP_InputComponent_Nanzhu_C___1__::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc___1___ReturnValue) == 0x000018, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_CreateSkillCommand_ReturnValue) == 0x00002C, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000040, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_CanResponseInput_ReturnValue) == 0x000054, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000058, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000068, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x00006C, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000080, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x000084, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x000098, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0000A0, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C1, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0000C8, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0000D8, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D9, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_IsMovingOnGround_ReturnValue) == 0x0000DA, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_BooleanAND_ReturnValue) == 0x0000DB, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1__, CallFunc_BooleanOR_ReturnValue) == 0x0000DC, "Member 'BP_InputComponent_Nanzhu_C___1__::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_InputComponent_Nanzhu.BP_InputComponent_Nanzhu_C.'Û	
// 0x0080 (0x0080 - 0x0000)
struct BP_InputComponent_Nanzhu_C_____ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361D[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0020(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0038(0x0020)()
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361F[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_Nanzhu_C_____) == 0x000008, "Wrong alignment on BP_InputComponent_Nanzhu_C_____");
static_assert(sizeof(BP_InputComponent_Nanzhu_C_____) == 0x000080, "Wrong size on BP_InputComponent_Nanzhu_C_____");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, Time) == 0x000000, "Member 'BP_InputComponent_Nanzhu_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, ReturnValue) == 0x000004, "Member 'BP_InputComponent_Nanzhu_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000018, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x00001A, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_CreateSkillCommand_ReturnValue) == 0x000020, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000038, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000058, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x00005C, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000068, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000078, "Member 'BP_InputComponent_Nanzhu_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_InputComponent_Nanzhu.BP_InputComponent_Nanzhu_C.;û	ö
// 0x0004 (0x0004 - 0x0000)
struct BP_InputComponent_Nanzhu_C_______ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_Nanzhu_C_______) == 0x000004, "Wrong alignment on BP_InputComponent_Nanzhu_C_______");
static_assert(sizeof(BP_InputComponent_Nanzhu_C_______) == 0x000004, "Wrong size on BP_InputComponent_Nanzhu_C_______");
static_assert(offsetof(BP_InputComponent_Nanzhu_C_______, Time) == 0x000000, "Member 'BP_InputComponent_Nanzhu_C_______::Time' has a wrong offset!");

// Function BP_InputComponent_Nanzhu.BP_InputComponent_Nanzhu_C.ý1	ö
// 0x0068 (0x0068 - 0x0000)
struct BP_InputComponent_Nanzhu_C___1____ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0004(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x0010(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3620[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3621[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_Nanzhu_C___1____) == 0x000008, "Wrong alignment on BP_InputComponent_Nanzhu_C___1____");
static_assert(sizeof(BP_InputComponent_Nanzhu_C___1____) == 0x000068, "Wrong size on BP_InputComponent_Nanzhu_C___1____");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, Time) == 0x000000, "Member 'BP_InputComponent_Nanzhu_C___1____::Time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000004, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x000010, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x00001C, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000024, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_CanResponseInput_ReturnValue) == 0x00002C, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_IsMovingOnGround_ReturnValue) == 0x00002E, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002F, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000038, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000048, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000050, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C___1____, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000060, "Member 'BP_InputComponent_Nanzhu_C___1____::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");

// Function BP_InputComponent_Nanzhu.BP_InputComponent_Nanzhu_C.;û¬w
// 0x0078 (0x0078 - 0x0000)
struct BP_InputComponent_Nanzhu_C____w final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3622[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3623[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x004C(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_Nanzhu_C____w) == 0x000008, "Wrong alignment on BP_InputComponent_Nanzhu_C____w");
static_assert(sizeof(BP_InputComponent_Nanzhu_C____w) == 0x000078, "Wrong size on BP_InputComponent_Nanzhu_C____w");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, Time) == 0x000000, "Member 'BP_InputComponent_Nanzhu_C____w::Time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, ReturnValue) == 0x000004, "Member 'BP_InputComponent_Nanzhu_C____w::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc______ReturnValue) == 0x000018, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00002C, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_CanResponseInput_ReturnValue) == 0x00002D, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002E, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_IsMovingOnGround_ReturnValue) == 0x00002F, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000030, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000038, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000048, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_CreateSkillCommand_ReturnValue) == 0x00004C, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000060, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_Nanzhu_C____w, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000070, "Member 'BP_InputComponent_Nanzhu_C____w::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");

}

