#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightGroup_SyncToMainLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightGroup_SyncToMainLight.BP_LightGroup_SyncToMainLight_C
// 0x0070 (0x0320 - 0x02B0)
class ABP_LightGroup_SyncToMainLight_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bEditorTick;                                       // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D4D[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalGI_C*                         CachedGI;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class ALight*, float>                    LightInstensityMap;                                // 0x02D0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)

public:
	void Update();
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void EditorTick();
	void ExecuteUbergraph_BP_LightGroup_SyncToMainLight(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightGroup_SyncToMainLight_C">();
	}
	static class ABP_LightGroup_SyncToMainLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightGroup_SyncToMainLight_C>();
	}
};
static_assert(alignof(ABP_LightGroup_SyncToMainLight_C) == 0x000008, "Wrong alignment on ABP_LightGroup_SyncToMainLight_C");
static_assert(sizeof(ABP_LightGroup_SyncToMainLight_C) == 0x000320, "Wrong size on ABP_LightGroup_SyncToMainLight_C");
static_assert(offsetof(ABP_LightGroup_SyncToMainLight_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_LightGroup_SyncToMainLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LightGroup_SyncToMainLight_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_LightGroup_SyncToMainLight_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LightGroup_SyncToMainLight_C, bEditorTick) == 0x0002C0, "Member 'ABP_LightGroup_SyncToMainLight_C::bEditorTick' has a wrong offset!");
static_assert(offsetof(ABP_LightGroup_SyncToMainLight_C, CachedGI) == 0x0002C8, "Member 'ABP_LightGroup_SyncToMainLight_C::CachedGI' has a wrong offset!");
static_assert(offsetof(ABP_LightGroup_SyncToMainLight_C, LightInstensityMap) == 0x0002D0, "Member 'ABP_LightGroup_SyncToMainLight_C::LightInstensityMap' has a wrong offset!");

}

