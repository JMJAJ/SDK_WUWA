#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroVolumeCloud_Global

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "SD_KuroTraceCloudData_structs.hpp"


namespace SDK::Params
{

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.ExecuteUbergraph_BP_KuroVolumeCloud_Global
// 0x0008 (0x0008 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global) == 0x000004, "Wrong alignment on BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global) == 0x000008, "Wrong size on BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global, EntryPoint) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_KuroVolumeCloud_Global_C_ExecuteUbergraph_BP_KuroVolumeCloud_Global::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_KuroVolumeCloud_Global_C_ReceiveTick");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_ReceiveTick) == 0x000004, "Wrong size on BP_KuroVolumeCloud_Global_C_ReceiveTick");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.UserConstructionScript
// 0x0050 (0x0050 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_UserConstructionScript final
{
public:
	EBP_EWorldType                                Editor_Type;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB5[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ___struct_Variable;                                // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_KuroVolumeCloud_Global_C_UserConstructionScript");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_UserConstructionScript) == 0x000050, "Wrong size on BP_KuroVolumeCloud_Global_C_UserConstructionScript");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UserConstructionScript, Editor_Type) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_UserConstructionScript::Editor_Type' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UserConstructionScript, ___struct_Variable) == 0x000010, "Member 'BP_KuroVolumeCloud_Global_C_UserConstructionScript::___struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'BP_KuroVolumeCloud_Global_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.UpdateCloudTransform
// 0x01A0 (0x01A0 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_UpdateCloudTransform final
{
public:
	const class UStaticMeshComponent*             CloudCube;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_EWorldType                                Editor_Type;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CastResult;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Variable;                                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB6[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue;       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB8[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_D_GetTransform_ReturnValue;               // 0x0050(0x0040)(IsPlainOldData, NoDestructor)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB9[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_TransformDoubleToTransform_ReturnValue; // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BBA[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                CallFunc_Conv_TransformToMatrix_ReturnValue;       // 0x00F0(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Matrix_GetScaledAxes_X;                   // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Matrix_GetScaledAxes_Y;                   // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Matrix_GetScaledAxes_Z;                   // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform) == 0x000010, "Wrong alignment on BP_KuroVolumeCloud_Global_C_UpdateCloudTransform");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform) == 0x0001A0, "Wrong size on BP_KuroVolumeCloud_Global_C_UpdateCloudTransform");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CloudCube) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CloudCube' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, Editor_Type) == 0x000008, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::Editor_Type' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CastResult) == 0x000009, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CastResult' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, ___bool_Variable) == 0x00000A, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_GetMaterial_ReturnValue) == 0x000010, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, K2Node_DynamicCast_As______) == 0x000020, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_GetWorldOriginLocation_ReturnValue) == 0x00002C, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_GetWorldOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Conv_IntVectorToVector_ReturnValue) == 0x000038, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Conv_IntVectorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, K2Node_Select_Default) == 0x000048, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_D_GetTransform_ReturnValue) == 0x000050, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_D_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Conv_TransformDoubleToTransform_ReturnValue) == 0x0000B0, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Conv_TransformDoubleToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x0000E0, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Conv_TransformToMatrix_ReturnValue) == 0x0000F0, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Conv_TransformToMatrix_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Matrix_GetScaledAxes_X) == 0x00013C, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Matrix_GetScaledAxes_X' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Matrix_GetScaledAxes_Y) == 0x000148, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Matrix_GetScaledAxes_Y' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Matrix_GetScaledAxes_Z) == 0x000154, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Matrix_GetScaledAxes_Z' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000160, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000170, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000180, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudTransform, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000190, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudTransform::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.UpdateCloudLighting
// 0x0020 (0x0020 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_UpdateCloudLighting final
{
public:
	class UMaterialInstanceDynamic*               Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_GetLerpGIData_LerpData;                   // 0x000C(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_UpdateCloudLighting) == 0x000008, "Wrong alignment on BP_KuroVolumeCloud_Global_C_UpdateCloudLighting");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_UpdateCloudLighting) == 0x000020, "Wrong size on BP_KuroVolumeCloud_Global_C_UpdateCloudLighting");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudLighting, Material) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudLighting::Material' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudLighting, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000008, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudLighting::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_UpdateCloudLighting, CallFunc_GetLerpGIData_LerpData) == 0x00000C, "Member 'BP_KuroVolumeCloud_Global_C_UpdateCloudLighting::CallFunc_GetLerpGIData_LerpData' has a wrong offset!");

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.GetLerpGIData
// 0x00F8 (0x00F8 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_GetLerpGIData final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 Param_LerpData;                                    // 0x0004(0x0014)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBB[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item;                           // 0x0024(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item_1;                         // 0x003C(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item_2;                         // 0x0058(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item_3;                         // 0x0070(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBC[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item_4;                         // 0x00A0(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 K2Node_MakeStruct_SD_KuroTraceCloudData;           // 0x00B4(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBD[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSD_KuroTraceCloudData                 K2Node_MakeStruct_SD_KuroTraceCloudData_1;         // 0x00E4(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_GetLerpGIData) == 0x000004, "Wrong alignment on BP_KuroVolumeCloud_Global_C_GetLerpGIData");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_GetLerpGIData) == 0x0000F8, "Wrong size on BP_KuroVolumeCloud_Global_C_GetLerpGIData");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, Time) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::Time' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, Param_LerpData) == 0x000004, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::Param_LerpData' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, ___int_Array_Index_Variable) == 0x000018, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, ___int_Loop_Counter_Variable) == 0x000038, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Array_Get_Item_1) == 0x00003C, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_MapRangeClamped_ReturnValue) == 0x000088, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_SelectInt_ReturnValue) == 0x00008C, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_LinearColorLerp_ReturnValue) == 0x000090, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Array_Get_Item_4) == 0x0000A0, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, K2Node_MakeStruct_SD_KuroTraceCloudData) == 0x0000B4, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::K2Node_MakeStruct_SD_KuroTraceCloudData' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C8, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000D0, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_GetLerpGIData, K2Node_MakeStruct_SD_KuroTraceCloudData_1) == 0x0000E4, "Member 'BP_KuroVolumeCloud_Global_C_GetLerpGIData::K2Node_MakeStruct_SD_KuroTraceCloudData_1' has a wrong offset!");

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.Update
// 0x00F0 (0x00F0 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_Update final
{
public:
	float                                         Temp;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   C;                                                 // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   B;                                                 // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   A;                                                 // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_EWorldType                                Editor;                                            // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BBE[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         NewLocalVar_0;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable;                                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBF[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ___float_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC0[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_1;    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC1[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_D_GetWorldDeltaSeconds_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FWrap_ReturnValue;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FWrap_ReturnValue_1;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_EWorldType                                CallFunc_GetWorldType_ReturnValue;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC2[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_Update) == 0x000008, "Wrong alignment on BP_KuroVolumeCloud_Global_C_Update");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_Update) == 0x0000F0, "Wrong size on BP_KuroVolumeCloud_Global_C_Update");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, Temp) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_Update::Temp' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, C) == 0x000004, "Member 'BP_KuroVolumeCloud_Global_C_Update::C' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, B) == 0x000010, "Member 'BP_KuroVolumeCloud_Global_C_Update::B' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, A) == 0x00001C, "Member 'BP_KuroVolumeCloud_Global_C_Update::A' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, Editor) == 0x000028, "Member 'BP_KuroVolumeCloud_Global_C_Update::Editor' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, NewLocalVar_0) == 0x000030, "Member 'BP_KuroVolumeCloud_Global_C_Update::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, ___int_Variable) == 0x000038, "Member 'BP_KuroVolumeCloud_Global_C_Update::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, ___bool_Variable) == 0x00003C, "Member 'BP_KuroVolumeCloud_Global_C_Update::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, ___float_Variable) == 0x000040, "Member 'BP_KuroVolumeCloud_Global_C_Update::___float_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000044, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, K2Node_Select_Default) == 0x00004C, "Member 'BP_KuroVolumeCloud_Global_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_GetScalarParameterValue_ReturnValue_1) == 0x00005C, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_D_GetWorldDeltaSeconds_ReturnValue) == 0x000068, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_D_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_Conv_DoubleToFloat_ReturnValue) == 0x000070, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_Conv_DoubleToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, K2Node_Select_Default_1) == 0x000078, "Member 'BP_KuroVolumeCloud_Global_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_GetVectorParameterValue_ReturnValue) == 0x00007C, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00008C, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x00009C, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_BreakColor_R) == 0x0000AC, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_BreakColor_G) == 0x0000B0, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_BreakColor_B) == 0x0000B4, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_BreakColor_A) == 0x0000B8, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_FWrap_ReturnValue) == 0x0000BC, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_FWrap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_FWrap_ReturnValue_1) == 0x0000C0, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_FWrap_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_MakeColor_ReturnValue) == 0x0000C4, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_GetWorldType_ReturnValue) == 0x0000D4, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_GetWorldType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D5, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, CallFunc_GetMaterial_ReturnValue) == 0x0000D8, "Member 'BP_KuroVolumeCloud_Global_C_Update::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, K2Node_DynamicCast_As______) == 0x0000E0, "Member 'BP_KuroVolumeCloud_Global_C_Update::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_Update, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_KuroVolumeCloud_Global_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.CheckNeed Update
// 0x0048 (0x0048 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_CheckNeed_Update final
{
public:
	struct FVectorDouble                          CallFunc_D_K2_GetComponentScale_ReturnValue;       // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_EqualEqual_VectorVector_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC3[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetComponentLocation_ReturnValue;    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_D_EqualEqual_VectorVector_ReturnValue_1;  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update) == 0x000008, "Wrong alignment on BP_KuroVolumeCloud_Global_C_CheckNeed_Update");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update) == 0x000048, "Wrong size on BP_KuroVolumeCloud_Global_C_CheckNeed_Update");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_D_K2_GetComponentScale_ReturnValue) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_D_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_D_EqualEqual_VectorVector_ReturnValue) == 0x000020, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_D_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_D_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_D_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_D_EqualEqual_VectorVector_ReturnValue_1) == 0x000041, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_D_EqualEqual_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_BooleanAND_ReturnValue_1) == 0x000043, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CheckNeed_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BP_KuroVolumeCloud_Global_C_CheckNeed_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_KuroVolumeCloud_Global.BP_KuroVolumeCloud_Global_C.CleanMID
// 0x0020 (0x0020 - 0x0000)
struct BP_KuroVolumeCloud_Global_C_CleanMID final
{
public:
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroVolumeCloud_Global_C_CleanMID) == 0x000008, "Wrong alignment on BP_KuroVolumeCloud_Global_C_CleanMID");
static_assert(sizeof(BP_KuroVolumeCloud_Global_C_CleanMID) == 0x000020, "Wrong size on BP_KuroVolumeCloud_Global_C_CleanMID");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CleanMID, CallFunc_GetMaterial_ReturnValue) == 0x000000, "Member 'BP_KuroVolumeCloud_Global_C_CleanMID::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CleanMID, CallFunc_GetMaterial_ReturnValue_1) == 0x000008, "Member 'BP_KuroVolumeCloud_Global_C_CleanMID::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CleanMID, K2Node_DynamicCast_As______) == 0x000010, "Member 'BP_KuroVolumeCloud_Global_C_CleanMID::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_KuroVolumeCloud_Global_C_CleanMID, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_KuroVolumeCloud_Global_C_CleanMID::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

