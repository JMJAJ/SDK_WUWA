#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GroupFadeWithVolume

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.MarkLightExcludeFromTOD
// 0x0048 (0x0048 - 0x0000)
struct BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALight*>                         CallFunc_Set_ToArray_Result;                       // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALight*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   K2Node_DynamicCast_As_____;                        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD");
static_assert(sizeof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD) == 0x000048, "Wrong size on BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, CallFunc_Set_ToArray_Result) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, K2Node_DynamicCast_As_____) == 0x000038, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::K2Node_DynamicCast_As_____' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_GroupFadeWithVolume_C_MarkLightExcludeFromTOD::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ComputeWeight
// 0x0048 (0x0048 - 0x0000)
struct BP_GroupFadeWithVolume_C_ComputeWeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPostProcessVolumeWeight_ReturnValue;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AKuroPostProcessVolume*>         CallFunc_Set_ToArray_Result;                       // 0x0020(0x0010)(ReferenceParm)
	class AKuroPostProcessVolume*                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPostProcessVolumeWeight_ReturnValue_1; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3720[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_ComputeWeight) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_ComputeWeight");
static_assert(sizeof(BP_GroupFadeWithVolume_C_ComputeWeight) == 0x000048, "Wrong size on BP_GroupFadeWithVolume_C_ComputeWeight");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, ReturnValue) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_GetPostProcessVolumeWeight_ReturnValue) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_GetPostProcessVolumeWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_Set_ToArray_Result) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_GetPostProcessVolumeWeight_ReturnValue_1) == 0x00003C, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_GetPostProcessVolumeWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ComputeWeight, CallFunc_FMax_ReturnValue_1) == 0x000044, "Member 'BP_GroupFadeWithVolume_C_ComputeWeight::CallFunc_FMax_ReturnValue_1' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CheckObjectPlatform
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GroupFadeWithVolume_C_CheckObjectPlatform final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3721[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3722[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_CheckObjectPlatform) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_CheckObjectPlatform");
static_assert(sizeof(BP_GroupFadeWithVolume_C_CheckObjectPlatform) == 0x0000A8, "Wrong size on BP_GroupFadeWithVolume_C_CheckObjectPlatform");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, Object) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::Object' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, Valid) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::Valid' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_GetPathName_ReturnValue) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_SelectString_ReturnValue) == 0x000040, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_SelectString_ReturnValue_1) == 0x000060, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_Contains_ReturnValue) == 0x000070, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000088, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckObjectPlatform, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000098, "Member 'BP_GroupFadeWithVolume_C_CheckObjectPlatform::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CheckPlatform
// 0x00D0 (0x00D0 - 0x0000)
struct BP_GroupFadeWithVolume_C_CheckPlatform final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_3;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_3;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_VolumetricSphereLightSuperFar_C*> CallFunc_Set_ToArray_Result;                       // 0x0030(0x0010)(ReferenceParm)
	TArray<class ABP_VolumetricSphereLight_C*>    CallFunc_Set_ToArray_Result_1;                     // 0x0040(0x0010)(ReferenceParm)
	class ABP_VolumetricSphereLightSuperFar_C*    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VolumetricSphereLight_C*            CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Remove_ReturnValue_1;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckObjectPlatform_valid;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckObjectPlatform_valid_1;              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3723[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALight*>                         CallFunc_Set_ToArray_Result_2;                     // 0x0070(0x0010)(ReferenceParm)
	class ALight*                                 CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SingleCloud_C*>              CallFunc_Set_ToArray_Result_3;                     // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_Set_Remove_ReturnValue_2;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3724[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SingleCloud_C*                      CallFunc_Array_Get_Item_3;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue_3;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckObjectPlatform_valid_2;              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckObjectPlatform_valid_3;              // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3725[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_CheckPlatform) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_CheckPlatform");
static_assert(sizeof(BP_GroupFadeWithVolume_C_CheckPlatform) == 0x0000D0, "Wrong size on BP_GroupFadeWithVolume_C_CheckPlatform");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, ___int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, ___int_Loop_Counter_Variable_2) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, ___int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, ___int_Array_Index_Variable_2) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, ___int_Loop_Counter_Variable_3) == 0x000024, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::___int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, ___int_Array_Index_Variable_3) == 0x00002C, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::___int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Set_ToArray_Result) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Set_ToArray_Result_1) == 0x000040, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Set_ToArray_Result_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Set_Remove_ReturnValue) == 0x000060, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Set_Remove_ReturnValue_1) == 0x000061, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Set_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_CheckObjectPlatform_valid) == 0x000062, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_CheckObjectPlatform_valid' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_CheckObjectPlatform_valid_1) == 0x000063, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_CheckObjectPlatform_valid_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006D, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Set_ToArray_Result_2) == 0x000070, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Set_ToArray_Result_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Set_ToArray_Result_3) == 0x000088, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Set_ToArray_Result_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Set_Remove_ReturnValue_2) == 0x000098, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Set_Remove_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Array_Get_Item_3) == 0x0000A0, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Set_Remove_ReturnValue_3) == 0x0000AC, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Set_Remove_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000AD, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_CheckObjectPlatform_valid_2) == 0x0000AE, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_CheckObjectPlatform_valid_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_CheckObjectPlatform_valid_3) == 0x0000AF, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_CheckObjectPlatform_valid_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Array_Length_ReturnValue_3) == 0x0000B0, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B4, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_GetPathName_ReturnValue) == 0x0000B8, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Contains_ReturnValue) == 0x0000C8, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CheckPlatform, CallFunc_Contains_ReturnValue_1) == 0x0000C9, "Member 'BP_GroupFadeWithVolume_C_CheckPlatform::CallFunc_Contains_ReturnValue_1' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateCloud
// 0x0058 (0x0058 - 0x0000)
struct BP_GroupFadeWithVolume_C_UpdateCloud final
{
public:
	float                                         B;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3726[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SingleCloud_C*>              CallFunc_Set_ToArray_Result;                       // 0x0018(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3727[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SingleCloud_C*                      CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3728[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_UpdateCloud) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_UpdateCloud");
static_assert(sizeof(BP_GroupFadeWithVolume_C_UpdateCloud) == 0x000058, "Wrong size on BP_GroupFadeWithVolume_C_UpdateCloud");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, B) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::B' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_Set_ToArray_Result) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, CallFunc_GetMaterial_ReturnValue) == 0x000040, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, K2Node_DynamicCast_As______) == 0x000048, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateCloud, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_GroupFadeWithVolume_C_UpdateCloud::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheVolumeLightSphereFar
// 0x0038 (0x0038 - 0x0000)
struct BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3729[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VolumetricSphereLightSuperFar_C*> CallFunc_Set_ToArray_Result;                       // 0x0010(0x0010)(ReferenceParm)
	class ABP_VolumetricSphereLightSuperFar_C*    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372A[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar");
static_assert(sizeof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar) == 0x000038, "Wrong size on BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar, CallFunc_Set_ToArray_Result) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphereFar::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheVolumeLightSphere
// 0x0038 (0x0038 - 0x0000)
struct BP_GroupFadeWithVolume_C_CacheVolumeLightSphere final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VolumetricSphereLight_C*>    CallFunc_Set_ToArray_Result;                       // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VolumetricSphereLight_C*            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372D[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_CacheVolumeLightSphere");
static_assert(sizeof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere) == 0x000038, "Wrong size on BP_GroupFadeWithVolume_C_CacheVolumeLightSphere");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphere::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphere::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphere::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere, CallFunc_Set_ToArray_Result) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphere::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphere::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphere::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphere::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheVolumeLightSphere, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_GroupFadeWithVolume_C_CacheVolumeLightSphere::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheCloud
// 0x0038 (0x0038 - 0x0000)
struct BP_GroupFadeWithVolume_C_CacheCloud final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SingleCloud_C*>              CallFunc_Set_ToArray_Result;                       // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SingleCloud_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3730[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_CacheCloud) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_CacheCloud");
static_assert(sizeof(BP_GroupFadeWithVolume_C_CacheCloud) == 0x000038, "Wrong size on BP_GroupFadeWithVolume_C_CacheCloud");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheCloud, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_CacheCloud::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheCloud, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_CacheCloud::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheCloud, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_CacheCloud::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheCloud, CallFunc_Set_ToArray_Result) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_CacheCloud::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheCloud, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_CacheCloud::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheCloud, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_CacheCloud::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheCloud, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_CacheCloud::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheCloud, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_GroupFadeWithVolume_C_CacheCloud::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateVolumeLightSphereFar
// 0x0040 (0x0040 - 0x0000)
struct BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar final
{
public:
	float                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3731[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VolumetricSphereLightSuperFar_C*> CallFunc_Set_ToArray_Result;                       // 0x0018(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3732[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VolumetricSphereLightSuperFar_C*    CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar");
static_assert(sizeof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar) == 0x000040, "Wrong size on BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, A) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::A' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, CallFunc_Set_ToArray_Result) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateVolumeLightSphere
// 0x0040 (0x0040 - 0x0000)
struct BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere final
{
public:
	float                                         B;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3733[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VolumetricSphereLight_C*>    CallFunc_Set_ToArray_Result;                       // 0x0018(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3734[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VolumetricSphereLight_C*            CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere");
static_assert(sizeof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere) == 0x000040, "Wrong size on BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, B) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::B' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, CallFunc_Set_ToArray_Result) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateLight
// 0x0108 (0x0108 - 0x0000)
struct BP_GroupFadeWithVolume_C_UpdateLight final
{
public:
	float                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3735[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3736[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALight*>                         CallFunc_Set_ToArray_Result;                       // 0x0040(0x0010)(ReferenceParm)
	class ALight*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3737[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_HaloPointLight_C*                   K2Node_DynamicCast_AsBP_Halo_Point_Light;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3738[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3739[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373A[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_UpdateLight) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_UpdateLight");
static_assert(sizeof(BP_GroupFadeWithVolume_C_UpdateLight) == 0x000108, "Wrong size on BP_GroupFadeWithVolume_C_UpdateLight");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, A) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::A' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, ___int_Array_Index_Variable) == 0x00001C, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, ___bool_Has_Been_Initd_Variable) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, ___bool_IsClosed_Variable) == 0x000038, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Set_ToArray_Result) == 0x000040, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_GetPathName_ReturnValue) == 0x000060, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, K2Node_DynamicCast_AsBP_Halo_Point_Light) == 0x000070, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::K2Node_DynamicCast_AsBP_Halo_Point_Light' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Array_Length_ReturnValue_2) == 0x000090, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D0, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E4, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0000E8, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UpdateLight, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000F8, "Member 'BP_GroupFadeWithVolume_C_UpdateLight::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheLightInstensity
// 0x0080 (0x0080 - 0x0000)
struct BP_GroupFadeWithVolume_C_CacheLightInstensity final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ALight*>                         CallFunc_Set_ToArray_Result;                       // 0x0008(0x0010)(ReferenceParm)
	class ALight*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373D[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373E[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_CacheLightInstensity) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_CacheLightInstensity");
static_assert(sizeof(BP_GroupFadeWithVolume_C_CacheLightInstensity) == 0x000080, "Wrong size on BP_GroupFadeWithVolume_C_CacheLightInstensity");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Set_ToArray_Result) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_GetPathName_ReturnValue) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Conv_FloatToString_ReturnValue) == 0x000058, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_CacheLightInstensity, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BP_GroupFadeWithVolume_C_CacheLightInstensity::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ClearInvalid
// 0x0038 (0x0038 - 0x0000)
struct BP_GroupFadeWithVolume_C_ClearInvalid final
{
public:
	class ALight*                                 NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VolumetricSphereLight_C*            NULLL;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ALight*                           ___object_Variable;                                // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_VolumetricSphereLightSuperFar_C* ___object_Variable_1;                              // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_SingleCloud_C*                ___object_Variable_2;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_VolumetricSphereLight_C*      ___object_Variable_3;                              // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Remove_ReturnValue_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Remove_ReturnValue_2;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Remove_ReturnValue_3;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_ClearInvalid) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_ClearInvalid");
static_assert(sizeof(BP_GroupFadeWithVolume_C_ClearInvalid) == 0x000038, "Wrong size on BP_GroupFadeWithVolume_C_ClearInvalid");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, NewLocalVar_0) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, NULLL) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::NULLL' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, ___object_Variable) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::___object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, ___object_Variable_1) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::___object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, ___object_Variable_2) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::___object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, ___object_Variable_3) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::___object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, CallFunc_Set_Remove_ReturnValue) == 0x000030, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, CallFunc_Set_Remove_ReturnValue_1) == 0x000031, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::CallFunc_Set_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, CallFunc_Set_Remove_ReturnValue_2) == 0x000032, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::CallFunc_Set_Remove_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ClearInvalid, CallFunc_Set_Remove_ReturnValue_3) == 0x000033, "Member 'BP_GroupFadeWithVolume_C_ClearInvalid::CallFunc_Set_Remove_ReturnValue_3' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_GroupFadeWithVolume_C_UserConstructionScript final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_UserConstructionScript");
static_assert(sizeof(BP_GroupFadeWithVolume_C_UserConstructionScript) == 0x000020, "Wrong size on BP_GroupFadeWithVolume_C_UserConstructionScript");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GroupFadeWithVolume_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GroupFadeWithVolume_C_ReceiveTick");
static_assert(sizeof(BP_GroupFadeWithVolume_C_ReceiveTick) == 0x000004, "Wrong size on BP_GroupFadeWithVolume_C_ReceiveTick");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ExecuteUbergraph_BP_GroupFadeWithVolume
// 0x0030 (0x0030 - 0x0000)
struct BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetGlobalGIActor_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3740[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalGI_C*                         K2Node_DynamicCast_AsBP_Global_GI;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3741[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputeWeight_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume) == 0x000008, "Wrong alignment on BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume");
static_assert(sizeof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume) == 0x000030, "Wrong size on BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, EntryPoint) == 0x000000, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, CallFunc_GetGlobalGIActor_ReturnValue) == 0x000008, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::CallFunc_GetGlobalGIActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, K2Node_DynamicCast_AsBP_Global_GI) == 0x000018, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::K2Node_DynamicCast_AsBP_Global_GI' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, CallFunc_IsValid_ReturnValue_3) == 0x000022, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, CallFunc_ComputeWeight_ReturnValue) == 0x000028, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::CallFunc_ComputeWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

