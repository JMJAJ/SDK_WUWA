#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SceneInteractionActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SceneInteractionActor.SceneInteractionActor_C.ExecuteUbergraph_SceneInteractionActor
// 0x0008 (0x0008 - 0x0000)
struct SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor) == 0x000004, "Wrong alignment on SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor");
static_assert(sizeof(SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor) == 0x000008, "Wrong size on SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor");
static_assert(offsetof(SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor, EntryPoint) == 0x000000, "Member 'SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor, K2Node_Event_EndPlayReason) == 0x000004, "Member 'SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function SceneInteractionActor.SceneInteractionActor_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct SceneInteractionActor_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SceneInteractionActor_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on SceneInteractionActor_C_ReceiveEndPlay");
static_assert(sizeof(SceneInteractionActor_C_ReceiveEndPlay) == 0x000001, "Wrong size on SceneInteractionActor_C_ReceiveEndPlay");
static_assert(offsetof(SceneInteractionActor_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'SceneInteractionActor_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function SceneInteractionActor.SceneInteractionActor_C.AddMatrialDataForChildrenActor
// 0x0010 (0x0010 - 0x0000)
struct SceneInteractionActor_C_AddMatrialDataForChildrenActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UItemMaterialControllerActorData_C*     MaterialData;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(SceneInteractionActor_C_AddMatrialDataForChildrenActor) == 0x000008, "Wrong alignment on SceneInteractionActor_C_AddMatrialDataForChildrenActor");
static_assert(sizeof(SceneInteractionActor_C_AddMatrialDataForChildrenActor) == 0x000010, "Wrong size on SceneInteractionActor_C_AddMatrialDataForChildrenActor");
static_assert(offsetof(SceneInteractionActor_C_AddMatrialDataForChildrenActor, Actor) == 0x000000, "Member 'SceneInteractionActor_C_AddMatrialDataForChildrenActor::Actor' has a wrong offset!");
static_assert(offsetof(SceneInteractionActor_C_AddMatrialDataForChildrenActor, MaterialData) == 0x000008, "Member 'SceneInteractionActor_C_AddMatrialDataForChildrenActor::MaterialData' has a wrong offset!");

// Function SceneInteractionActor.SceneInteractionActor_C.ResetTagActorHide
// 0x000C (0x000C - 0x0000)
struct SceneInteractionActor_C_ResetTagActorHide final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(SceneInteractionActor_C_ResetTagActorHide) == 0x000004, "Wrong alignment on SceneInteractionActor_C_ResetTagActorHide");
static_assert(sizeof(SceneInteractionActor_C_ResetTagActorHide) == 0x00000C, "Wrong size on SceneInteractionActor_C_ResetTagActorHide");
static_assert(offsetof(SceneInteractionActor_C_ResetTagActorHide, Tag) == 0x000000, "Member 'SceneInteractionActor_C_ResetTagActorHide::Tag' has a wrong offset!");

// Function SceneInteractionActor.SceneInteractionActor_C.StopExtraEffectOnTagsChange
// 0x000C (0x000C - 0x0000)
struct SceneInteractionActor_C_StopExtraEffectOnTagsChange final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(SceneInteractionActor_C_StopExtraEffectOnTagsChange) == 0x000004, "Wrong alignment on SceneInteractionActor_C_StopExtraEffectOnTagsChange");
static_assert(sizeof(SceneInteractionActor_C_StopExtraEffectOnTagsChange) == 0x00000C, "Wrong size on SceneInteractionActor_C_StopExtraEffectOnTagsChange");
static_assert(offsetof(SceneInteractionActor_C_StopExtraEffectOnTagsChange, Tag) == 0x000000, "Member 'SceneInteractionActor_C_StopExtraEffectOnTagsChange::Tag' has a wrong offset!");

// Function SceneInteractionActor.SceneInteractionActor_C.GetDirectorBySequence
// 0x0010 (0x0010 - 0x0000)
struct SceneInteractionActor_C_GetDirectorBySequence final
{
public:
	class ULevelSequence*                         Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SceneInteractionActor_C_GetDirectorBySequence) == 0x000008, "Wrong alignment on SceneInteractionActor_C_GetDirectorBySequence");
static_assert(sizeof(SceneInteractionActor_C_GetDirectorBySequence) == 0x000010, "Wrong size on SceneInteractionActor_C_GetDirectorBySequence");
static_assert(offsetof(SceneInteractionActor_C_GetDirectorBySequence, Sequence) == 0x000000, "Member 'SceneInteractionActor_C_GetDirectorBySequence::Sequence' has a wrong offset!");
static_assert(offsetof(SceneInteractionActor_C_GetDirectorBySequence, ReturnValue) == 0x000008, "Member 'SceneInteractionActor_C_GetDirectorBySequence::ReturnValue' has a wrong offset!");

// Function SceneInteractionActor.SceneInteractionActor_C.StopTagAkEvent
// 0x000C (0x000C - 0x0000)
struct SceneInteractionActor_C_StopTagAkEvent final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SceneInteractionActor_C_StopTagAkEvent) == 0x000004, "Wrong alignment on SceneInteractionActor_C_StopTagAkEvent");
static_assert(sizeof(SceneInteractionActor_C_StopTagAkEvent) == 0x00000C, "Wrong size on SceneInteractionActor_C_StopTagAkEvent");
static_assert(offsetof(SceneInteractionActor_C_StopTagAkEvent, Tag) == 0x000000, "Member 'SceneInteractionActor_C_StopTagAkEvent::Tag' has a wrong offset!");

// Function SceneInteractionActor.SceneInteractionActor_C.UpdateProjectionActorTransform
// 0x0040 (0x0040 - 0x0000)
struct SceneInteractionActor_C_UpdateProjectionActorTransform final
{
public:
	struct FTransformDouble                       Transform1;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SceneInteractionActor_C_UpdateProjectionActorTransform) == 0x000010, "Wrong alignment on SceneInteractionActor_C_UpdateProjectionActorTransform");
static_assert(sizeof(SceneInteractionActor_C_UpdateProjectionActorTransform) == 0x000040, "Wrong size on SceneInteractionActor_C_UpdateProjectionActorTransform");
static_assert(offsetof(SceneInteractionActor_C_UpdateProjectionActorTransform, Transform1) == 0x000000, "Member 'SceneInteractionActor_C_UpdateProjectionActorTransform::Transform1' has a wrong offset!");

}

